<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/03/04/hello-world/"/>
      <url>/2020/03/04/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2020/03/03/ce-shi/"/>
      <url>/2020/03/03/ce-shi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>    <div id="aplayer-lAiHxJLP" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="34078903" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h1 id="1-解决无法连接手机问题"><a href="#1-解决无法连接手机问题" class="headerlink" title="1.解决无法连接手机问题"></a>1.解决无法连接手机问题</h1><ul><li><h2 id="解决办法：设置环境变量"><a href="#解决办法：设置环境变量" class="headerlink" title="解决办法：设置环境变量"></a>解决办法：设置环境变量</h2><pre><code>export ANDROID_HOME=/media/baloneo/disk/androidsdk    // 安卓sdk目录export PATH=$PATH:/home/baloneo/software/flutter/bin // flutter 目录export PATH=${PATH}:${ANDROID_HOME}/toolsexport PATH=${PATH}:${ANDROID_HOME}/platform-toolsexport PUB_HOSTED_URL=https://pub.flutter-io.cnexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn  </code></pre></li></ul><h1 id="2-运行时会卡在Running-‘gradle-assembleDebug"><a href="#2-运行时会卡在Running-‘gradle-assembleDebug" class="headerlink" title="2.运行时会卡在Running ‘gradle assembleDebug"></a>2.运行时会卡在Running ‘gradle assembleDebug</h1><ul><li><h2 id="解决办法：使用阿里云镜像"><a href="#解决办法：使用阿里云镜像" class="headerlink" title="解决办法：使用阿里云镜像"></a>解决办法：使用阿里云镜像</h2><pre><code>  1. 打开项目下的/android/build.gradle      repositories   {  // 这里做了修改，使用国内阿里的代理        // google()   // jcenter()    maven { url &apos;https://maven.aliyun.com/repository/google&apos; }    maven { url &apos;https://maven.aliyun.com/repository/jcenter&apos; }    maven { url &apos;http://maven.aliyun.com/nexus/content/groups/public&apos; }     }    dependencies {    classpath &apos;com.android.tools.build:gradle:3.5.0&apos;    classpath &quot;org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin\_version&quot;    }  }   allprojects {    repositories {    //修改的地方    //google()   //jcenter()        maven { url &apos;https://maven.aliyun.com/repository/google&apos; }      maven { url &apos;https://maven.aliyun.com/repository/google&apos; }      maven { url &apos;https://maven.aliyun.com/repository/jcenter&apos; }      maven { url &apos;http://maven.aliyun.com/nexus/content/groups/public&apos; }   }   }}  2. 打开fluttersdk下的/packages/flutter_tools/gradle/flutter.gradle  //禁用 google() 和 jcenter()  //google()   //jcenter() //添加这三行代码    maven { url &apos;https://maven.aliyun.com/repository/google&apos; }      maven { url &apos;https://maven.aliyun.com/repository/google&apos; }      maven { url &apos;https://maven.aliyun.com/repository/jcenter&apos; }      maven { url &apos;http://maven.aliyun.com/nexus/content/groups/public&apos; }  </code></pre></li></ul><blockquote><p>参考：<br> <a href="https://www.cnblogs.com/jackxu/p/9876454.html" target="_blank" rel="noopener">https://www.cnblogs.com/jackxu/p/9876454.html</a><br> <a href="https://segmentfault.com/a/1190000021451897?utm_source=tag-newest" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021451897?utm_source=tag-newest</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的blog 终于上线了(｡♥‿♥｡)</title>
      <link href="/2020/03/02/wo-de-blog-zhong-yu-shang-xian-liao/"/>
      <url>/2020/03/02/wo-de-blog-zhong-yu-shang-xian-liao/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>    <div id="aplayer-jBvEKZyD" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="3986040" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div>  <p>历时半天终于将我的blog从国内的码云以及国外的github同时上线了，唉说说都是心酸泪。顺便也来总结一下建站经验。<br>我使用的是manjaro+kde桌面，manjaro 有极好用的pacman包管理器，而且与wine的兼容性也很好，可以利用wine安装tim wps 百度网盘等软件这就让我放弃了用了多年的 <code>sudo apt-get install</code>(哈哈，懂的人应该知道我在说谁)，下次我会详细的讲一下manjaro+window10双系统的过程，不能讲偏，本文主要是讲hexo。<br>看完本文你就可以在本地跑一个博客啦，下次我再讲如何将hexo利用github和国内的码云上线，可以通过网址访问到你的博客。</p><h3 id="1-下载nodejs和git"><a href="#1-下载nodejs和git" class="headerlink" title="1.下载nodejs和git"></a>1.下载nodejs和git</h3><ul><li>安装 nodejs<ul><li>manjaro linux<br><code>sudo pacman -S nodejs</code><br><code>sudo pacman -S npm</code></li><li>windows<br>nodejs官网：<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/</a><br>设置好安装路径后，点击一路安装即可，并且现在的nodejs安装包里都附有设置环境变量的功能，所以只要点击下一步下一步就可以了。<br>安装好后在windows的cmd里（快捷键:win+r)，linux的terminal里输入以下命令来试试是否安装成功。<br><code>node -v</code><br>如果显示 <code>vxx.xx</code>(xx为数字，即为nodejs的版本号)，那么恭喜你，你可以入坑了！    </li></ul></li><li>安装git<br>安装git也很简单，windows用户下安装包，linux基本都自带了也没什么好说了。顺便说一句题外话，我们以后初始化hexo，安装主题，以及未来将blog上传到github以及码云都需要用到git。这是github出品的全世界最优秀的代码版本控制系统。  </li></ul><h3 id="2-安装-hexo"><a href="#2-安装-hexo" class="headerlink" title="2.安装 hexo"></a>2.安装 hexo</h3><ul><li>安装cnpm<br>安装hexo 之前我们还要安装一个东西，叫cnpm。说cnpm前我们要了解一下npm，npm是nodejs的包管理器，可以利用它来进行各种基于nodejs的包下载，比如说vue还有各种web开发时要用到的javascripet脚本。实际上我们安装nodejs时npm也是一同安装了的。<br>但是npm毕竟服务器在国外所以访问非常慢，会出现类似迅雷那种下到99%下不了的感觉。而cnpm是我国淘宝团队制作的npm的国内镜像，安装便捷访问速度很快而且与npm同步更新。<br>cnpm有两种安装方法一种是改变npm的源地址一种是利用npm来安装，我推荐第一种方便快捷。<br>输入以下命令，以后就一劳永逸了，毕竟后面有好多地方要用到npm。</li><li>注意：liunx 用户要在下面两个命令前+sudo获得管理者权限，window用户也最好用管理者权限来打开cmd<br><code>npm install cnpm -g --registry=https://registry.npm.taobao.org</code>  </li><li>那么现在我们来安装hexo：<br><code>npm install hexo-cli -g</code><br>上面的 -g 的意思是全局安装，也就是无论你在那个文件夹下使用hexo的命令都可以安装你的blog。  </li></ul><h3 id="3-初始化blog"><a href="#3-初始化blog" class="headerlink" title="3.初始化blog"></a>3.初始化blog</h3><ul><li>创建一个文件夹，并打开文件夹，在里面使用cmd或terminal。window用户可以直接在文件管理器的地理栏里输入cmd则会自动打开cmd。</li><li>使用这个命令就会自动通过github的国外网站来clone官方的示例。由于github在美国所以会比较慢，所以耐心等待吧。而且必须要保证文件完整性否则会后续出现各种问题。<br>  <code>hexo init</code><h3 id="4-安装主题"><a href="#4-安装主题" class="headerlink" title="4.安装主题"></a>4.安装主题</h3><h3 id="5-安装hexo-admin"><a href="#5-安装hexo-admin" class="headerlink" title="5.安装hexo-admin"></a>5.安装hexo-admin</h3></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
